{"version":3,"sources":["components/question/index.jsx","components/didacticModal/index.jsx","components/topic/index.jsx","images/meRepresentaIcon.svg","images/meRepresentaLogo.svg","components/logo/index.jsx","images/roundBackground.svg","components/withBackground/index.jsx","components/didacticQuestion/index.jsx","images/scoreBackground.svg","components/score/index.jsx","config/index.js","components/round/index.jsx","images/initialLoadingBackground.svg","components/landing/index.jsx","components/topics/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["MobileSizeContainer","children","className","Option","onOptionSelected","option","Button","onClick","_","toUpper","Question","question","options","text","map","number","Row","Description","description","answerIsOk","DidacticModal","show","descriptionRead","Modal","onHide","Header","Title","topic","Body","Footer","variant","topicColors","WithTopicColor","render","get","Topic","color","style","Logo","src","IconSvg","LogoSvg","WithBackground","background","backgroundImage","DidacticQuestion","moveToNext","currentQuestionNumber","questionCount","useState","answered","setAnswered","setAnswerIsOk","setOptions","answer","incorrectAnswers","useEffect","shuffledOptions","concat","shuffle","value","Progress","Background","isCorrect","isEqual","Score","score","setPlayAgain","config","questionsPerRound","parseInt","process","REACT_APP_QUESTIONS_PER_ROUND","Round","questions","setQuestions","setCurrentQuestionNumber","setScore","roundQuestions","sampleSize","questionPool","isEmpty","questionsCount","size","isActive","currentQuestion","Landing","follow","Topics","App","currentStep","setCurrentStep","last","Game","steps","Step","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edf87ba7.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport { Button, Row } from \"react-bootstrap\";\nimport \"./index.css\";\n\nconst MobileSizeContainer = ({ children }) => <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-6\">\n  {children}\n</div>;\n\nconst Option = ({ onOptionSelected, option }) =>\n  <Button className=\"btn btn-dark option-button col-md-12\" onClick={() => onOptionSelected(option)}>\n    <span className=\"option-text\">{_.toUpper(option)}</span>\n  </Button>\n\nconst Question = ({ question, options, onOptionSelected }) => (\n  <div className=\"col-10\">\n    <p>{question.text}</p>\n    <MobileSizeContainer>\n      {options.map((option, number) =>\n        <Row key={number} className=\"option\">\n          <Option\n            question={question}\n            option={option}\n            onOptionSelected={onOptionSelected}\n          />\n        </Row>\n      )}\n    </MobileSizeContainer>\n  </div>\n);\n\nexport default Question;","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst Description = ({ question: { description }, answerIsOk }) => {\n  return (\n    <div>\n      <p>{description}</p>\n      <p>{answerIsOk? \"Ok\" : \"Not ok\"}</p>\n    </div>\n  );\n}\n\nconst DidacticModal = ({ question, show, answerIsOk, descriptionRead }) => (\n  <Modal show={show} onHide={descriptionRead}>\n    <Modal.Header>\n      <Modal.Title>{question.topic}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      <Description question={question} answerIsOk={answerIsOk}/>\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={descriptionRead}>\n        Cerrar\n      </Button>\n    </Modal.Footer>\n  </Modal>\n);\n\nexport default DidacticModal;","import _ from \"lodash\";\nimport React from \"react\";\nimport \"./index.css\"\n\nconst topicColors = {\n  \"Frases Memorables\": \"FB2D11\",\n  \"Política Nacional\": \"4BD6F7\",\n  \"Legislativas\": \"F7A334\",\n  \"Latinoamérica\": \"32F991\",\n  \"Elecciones 2021\": \"9F47FC\"\n};\n\nconst WithTopicColor = ({ render, topic }) => {\n  const color = `#${_.get(topicColors, topic)}`;\n  return render(color);\n};\n\nconst Topic = ({ topic }) => {\n  return <div className=\"topic\">\n    <WithTopicColor\n      render={color => <p style={{ \"background-color\": color }} className=\"topic-name\">{_.toUpper(topic)}</p>}\n      topic={topic}\n    />\n  </div>;\n}\n\nexport default Topic;","export default __webpack_public_path__ + \"static/media/meRepresentaIcon.f1bf9706.svg\";","export default __webpack_public_path__ + \"static/media/meRepresentaLogo.40125fd4.svg\";","import React from \"react\";\nimport IconSvg from '../../images/meRepresentaIcon.svg';\nimport LogoSvg from '../../images/meRepresentaLogo.svg';\n\nconst Logo = ({ topic }) => <div>\n  <img src={IconSvg} />\n  <img src={LogoSvg} />\n</div>\n\nexport default Logo;","export default __webpack_public_path__ + \"static/media/roundBackground.fd7c6a56.svg\";","import React from \"react\";\nimport \"../../App.css\";\nimport \"./index.css\";\n\nconst WithBackground = ({ background, children }) => <div className=\"game-container\" style={{ backgroundImage: `url(${background})` }}>\n  {children}\n</div>\n\nexport default WithBackground;","import React, { useEffect, useState } from 'react';\nimport _ from \"lodash\";\nimport '../../App.css';\nimport Question from \"../question\";\nimport DidacticModal from \"../didacticModal\";\nimport Topic from \"../topic\";\nimport Logo from \"../logo\";\nimport \"./index.css\";\nimport Background from '../../images/roundBackground.svg';\nimport WithBackground from \"../withBackground\";\n\nexport default function DidacticQuestion({ question, moveToNext, currentQuestionNumber, questionCount }) {\n  const [answered, setAnswered] = useState(false);\n  const [answerIsOk, setAnswerIsOk] = useState(false);\n  const [options, setOptions] = useState([]);\n  \n  const { answer, incorrectAnswers, topic } = question;\n  useEffect(() => {\n    const shuffledOptions = _(incorrectAnswers).concat(answer).shuffle().value();\n    setOptions(shuffledOptions);\n  }, [answer, incorrectAnswers]);\n\n  const onOptionSelected = option => {\n    if (answered) return;\n    const isCorrect = _.isEqual(answer, option);\n    setAnswered(true);\n    setAnswerIsOk(isCorrect);\n  };\n\n  const Progress = () => <p>{currentQuestionNumber + 1} / {questionCount}</p>;\n\n  return (\n    <WithBackground background={Background}>\n      <Logo topic={topic} />\n      <Topic topic={topic}/>\n      <Question question={question} options={options} onOptionSelected={onOptionSelected}/>\n      <Progress />\n      <DidacticModal\n        show={answered}\n        question={question}\n        answerIsOk={answerIsOk}\n        descriptionRead={() => moveToNext(answerIsOk)}\n      />\n    </WithBackground>\n  );\n}","export default __webpack_public_path__ + \"static/media/scoreBackground.f7d2069b.svg\";","import React from \"react\";\nimport WithBackground from \"../withBackground\";\nimport Background from '../../images/scoreBackground.svg';\n\nconst Score = ({ score, setPlayAgain }) => <WithBackground background={Background}>\n  <p>{score}</p>\n  <button onClick={setPlayAgain}>Jugar de nuevo</button>\n</WithBackground>;\n\nexport default Score;","const config = {\n  questionsPerRound: parseInt(process.env.REACT_APP_QUESTIONS_PER_ROUND) || 10\n};\n\nexport default config;","import React, { useState, useEffect } from 'react';\nimport _ from \"lodash\";\nimport DicaticQuestion from \"../didacticQuestion\";\nimport Score from \"../score\";\nimport config from \"../../config\";\nimport questionPool from \"../../questions.json\";\n\nexport default function Round({ setPlayAgain }) {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionNumber, setCurrentQuestionNumber] = useState(0);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    const roundQuestions = _.sampleSize(questionPool, config.questionsPerRound);\n    setQuestions(roundQuestions);\n  }, []);\n\n  if (_.isEmpty(questions)) return null;\n  \n  const moveToNext = isCorrect => {\n    if (isCorrect) setScore(score + 1);\n    setCurrentQuestionNumber(currentQuestionNumber + 1)\n  };\n  \n  const questionsCount = _.size(questions);\n  const isActive = currentQuestionNumber < questionsCount;\n  const currentQuestion = questions[currentQuestionNumber];\n\n  return (\n    <div>\n      {\n        isActive?\n        <DicaticQuestion\n          key={currentQuestionNumber}\n          question={currentQuestion}\n          moveToNext={moveToNext}\n          questionCount={questionsCount}\n          currentQuestionNumber={currentQuestionNumber}\n        />\n        : <Score score={score} setPlayAgain={setPlayAgain}/>\n      }      \n    </div>\n  );\n};","export default __webpack_public_path__ + \"static/media/initialLoadingBackground.8cd35bca.svg\";","import React from \"react\";\nimport WithBackground from \"../withBackground\";\nimport Background from '../../images/initialLoadingBackground.svg';\n\nconst Landing = ({ follow }) => <WithBackground background={Background}>\n  <p>Merre</p>\n  <button onClick={follow}>Next</button>\n</WithBackground>\n\nexport default Landing;","import React from \"react\";\nimport Logo from \"../logo\";\nimport WithBackground from \"../withBackground\";\nimport Background from '../../images/initialLoadingBackground.svg';\n\nconst Topics = ({ follow }) => <WithBackground background={Background}>\n  <Logo />\n  <p>Estos son los temas</p>\n  <button onClick={follow}>Next</button>\n</WithBackground>;\n\nexport default Topics;","import Round from \"./components/round\";\nimport _ from \"lodash\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport Landing from \"./components/landing\";\nimport Topics from \"./components/topics\";\nimport \"./App.css\"\n\nfunction App() {\n  const [currentStep, setCurrentStep] = useState(\"landing\");\n  const setPlayAgain = _.last(useState());\n  const Game = ({ setPlayAgain }) => {\n    return <Round setPlayAgain={setPlayAgain}/>;\n  };\n\n  const steps = {\n    \"landing\": () => <Landing follow={() => setCurrentStep(\"topics\")}/>,\n    \"topics\": () => <Topics follow={() => setCurrentStep(\"game\")}/>,\n    \"game\": () => <Game setPlayAgain={setPlayAgain}/>\n  };\n\n  const Step = _.get(steps, currentStep);\n\n  return <div className=\"App\">\n      <Step />\n  </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}